> a <- 5> b <- 3> c <- a+b> a <- 5> b <- 3> c <- a+b> b <- 6> print(c)[1] 8> b <- 6> c <- a+b> print(c)[1] 11> print(c)[1] 11> ls()[1] "a" "b" "c"> help("max")> x <- 10> y <- 50> z <- c("three", "blind", "mice")> f <- function(n,p) sqrt(p*n)> ls()[1] "a" "b" "c" "f" "x" "y" "z"> ls.str()a :  num 5b :  num 6c :  num 11f : function (n, p)  x :  num 10y :  num 50z :  chr [1:3] "three" "blind" "mice"> x <- 10> y <- 50> z <- c("three", "blind", "mice")> f <- function(n,p) sqrt(p*n)> ls()[1] "a" "b" "c" "f" "x" "y" "z"> ls.str()a :  num 5b :  num 6c :  num 11f : function (n, p)  x :  num 10y :  num 50z :  chr [1:3] "three" "blind" "mice"> rm(list = ls())> ls()character(0)> c(1,2,3,4,5)[1] 1 2 3 4 5> c(1*pi, 2*pi, 3*pi)[1] 3.141593 6.283185 9.424778> c("HJ", "loves", "CE")[1] "HJ"    "loves" "CE"   > c(TRUE, TRUE, FALSE, TRUE)[1]  TRUE  TRUE FALSE  TRUE> v1 <- c(1,2,3)> v2 <- c(4,5,6)> c(v1,v2)[1] 1 2 3 4 5 6> v3<- c("A", "B", "C")> c(v1,v3)[1] "1" "2" "3" "A" "B" "C"> mode(3.141592)[1] "numeric"> c("HJ", "loves", "CE")[1] "HJ"    "loves" "CE"   > 1:5[1] 1 2 3 4 5> 9:0 [1] 9 8 7 6 5 4 3 2 1 0> seq(from=1, to=5, by=2)[1] 1 3 5> rep(1, times=10) [1] 1 1 1 1 1 1 1 1 1 1> s <- as.Date("2022-05-04")> e <- as.Date("2022-05-08")> seq(s,e,1)[1] "2022-05-04" "2022-05-05" "2022-05-06" "2022-05-07" "2022-05-08"> seq(from=s, by=2, length.out=7)[1] "2022-05-04" "2022-05-06" "2022-05-08" "2022-05-10" "2022-05-12" "2022-05-14" "2022-05-16"> a <- 3> a == pi[1] FALSE> a != pi[1] TRUE> a < pi[1] TRUE> a <= pi[1] TRUE> v <- c(3,pi,4)> w <- c(pi,pi,pi)> v == w[1] FALSE  TRUE FALSE> v != w[1]  TRUE FALSE  TRUE> v == pi[1] FALSE  TRUE FALSE> pi == v[1] FALSE  TRUE FALSE> any(v==pi)[1] TRUE> all(v==pi)[1] FALSE> fib <- c(0,1,1,2,3,5,8,13,21,34)> fib [1]  0  1  1  2  3  5  8 13 21 34> fib[1][1] 0> fib[2][1] 1> fib[0]numeric(0)> fib[1:3][1] 0 1 1> fib[c(1,2,4,8)][1]  0  1  2 13> fib[-1][1]  1  1  2  3  5  8 13 21 34> fib < 10 [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE> fib[fib %% 2 == 0][1]  0  2  8 34> years <- c(1998, 2000)> names(years) <- c("Coad", "HyunJu")> years  Coad HyunJu   1998   2000 > years["HyunJu"]HyunJu   2000 > years[c("Coad", "HyunJu")]  Coad HyunJu   1998   2000 > v <- c(11,12,13,14,15)> w <- c(1,2,3,4,5)> v+w[1] 12 14 16 18 20> v-w[1] 10 10 10 10 10> v*w[1] 11 24 39 56 75> v/w[1] 11.000000  6.000000  4.333333  3.500000  3.000000> v^w[1]     11    144   2197  38416 759375> w-mean(w)[1] -2 -1  0  1  2> cv <- function(x) sd(x)/mean(x)> x <- c(1:10)> cv(x)[1] 0.5504819> mean(x)[1] 5.5> cv(1:10)[1] 0.5504819> gcd <- function(a,b){+   if(b == 0) return (a)+   else return gcd(b, a%%b)Error: unexpected symbol in:"  if(b == 0) return (a)  else return gcd"> gcd <- function(a,b){+   if(b == 0) return (a)+   else return gcd(b, a%%b)Error: unexpected symbol in:"  if(b == 0) return (a)  else return gcd"> +}Error: unexpected '}' in "+}"> gcd <- function(a,b){+ +  if(b == 0) return (a)+ +  else return gcd(b, a%%b)Error: unexpected 'else' in:"+  if(b == 0) return (a)+  else"> gcd <- function(a,b){+   if(b == 0) return (a)+   else return gcd(b, a%%b)Error: unexpected symbol in:"  if(b == 0) return (a)  else return gcd"> gcd(8,2)Error in gcd(8, 2) : could not find function "gcd">   else return (gcd(b, a%%b))Error: unexpected 'else' in "  else"> gcd <- function(a,b){+   if(b == 0) return (a)+   else return (gcd(b, a%%b))+ }> gcd(8,2)[1] 2> gcd(100, 20)[1] 20> getwd()[1] "/Users/Ahn"> setwd("Rtest")Error in setwd("Rtest") : cannot change working directory> search() [1] ".GlobalEnv"        "tools:rstudio"     "package:stats"     "package:graphics"  [5] "package:grDevices" "package:utils"     "package:datasets"  "package:methods"   [9] "Autoloads"         "package:base"     > library() # (패키지이름)> num1 <- NA> is.na(num1)[1] TRUE> num2 <- NULL> is.null(num2)[1] TRUE> TRUE & FALSE[1] FALSE> TRUE | FALSE[1] TRUE> !TRUE[1] FALSE> c(TRUE, TRUE) & c(TRUE, FALSE)[1]  TRUE FALSE> c(TRUE, TRUE) && c(TRUE, FALSE)Error in c(TRUE, TRUE) && c(TRUE, FALSE) :   'length = 2' in coercion to 'logical(1)'> f <- factor('s', c('s', 't'))> f[1] sLevels: s t> nlevels(f)[1] 2> lefels(f)Error in lefels(f) : could not find function "lefels"> levels(f)[1] "s" "t"> ordered('x', c('x','y','z'))[1] xLevels: x < y < z> # 벡터 > a <- c('x', 'y', 'z')> a[1][1] "x"> a[-3][1] "x" "y"> a[-1][1] "y" "z"> a[c(1,2)][1] "x" "y"> a[2:3][1] "y" "z"> a.lengthError: object 'a.length' not found> 'x' %in% c('x', 'y', 'z')[1] TRUE> a <- c(10,20,30,40)> a+1[1] 11 21 31 41> # 생성 문법 > seq(1,5,2)[1] 1 3 5> 5:1[1] 5 4 3 2 1> rep(1:2 times = 4)Error: unexpected symbol in "rep(1:2 times"> rep(1:2 each = 4)Error: unexpected symbol in "rep(1:2 each"> rep(1:2 each = 4, times = 4)Error: unexpected symbol in "rep(1:2 each"> # 리스트 > a <- list(names = "Data", num = 100)> $namesError: unexpected '$' in "$"> # 리스트 > (a <- list(names = "Data", num = 100))$names[1] "Data"$num[1] 100> $namesError: unexpected '$' in "$"> $namesError: unexpected '$' in "$"> $numError: unexpected '$' in "$"> # 생성함수> matrix(c(10,20,30,40), nrow=2)     [,1] [,2][1,]   10   30[2,]   20   40> matrix(c(10,20,30,40), ncol=1)     [,1][1,]   10[2,]   20[3,]   30[4,]   40> a <- matrix(1:4, ncol=2)> rownames(a)NULL> rownames(a) <- c('one', 'tow')> a    [,1] [,2]one    1    3tow    2    4> rownames(a) <- c('one', 'two')> a    [,1] [,2]one    1    3two    2    4> colnames(a) <- c('one', 'two')> a    one twoone   1   3two   2   4> matrix(c(1:9), nrow=3, byrow=TRUE)     [,1] [,2] [,3][1,]    1    2    3[2,]    4    5    6[3,]    7    8    9> matrix(c(1:9), nrow=3, dimnames = list(c('A', 'B', 'C'), c('D', 'E', 'F')))  D E FA 1 4 7B 2 5 8C 3 6 9> a <- matrix(1:9, ncol=3)> a[2:3,]     [,1] [,2] [,3][1,]    2    5    8[2,]    3    6    9> a[,1:2]     [,1] [,2][1,]    1    4[2,]    2    5[3,]    3    6> a*3     [,1] [,2] [,3][1,]    3   12   21[2,]    6   15   24[3,]    9   18   27> a-a     [,1] [,2] [,3][1,]    0    0    0[2,]    0    0    0[3,]    0    0    0> a%*%a     [,1] [,2] [,3][1,]   30   66  102[2,]   36   81  126[3,]   42   96  150> # array> array(11:20, dim=c(2,5))     [,1] [,2] [,3] [,4] [,5][1,]   11   13   15   17   19[2,]   12   14   16   18   20> # 데이터 프레임> a <- data.frame(x=c(1,2,3,4,5), y=c(6,7,8,9,10))> # 데이터 프레임> (a <- data.frame(x=c(1,2,3,4,5), y=c(6,7,8,9,10)))  x  y1 1  62 2  73 3  84 4  95 5 10> (a <- data.frame(x=c(1,2,3,4,5), y=c(6,7,8,9,10), z=c('s', 'f', 's', 'f', 's')))  x  y z1 1  6 s2 2  7 f3 3  8 s4 4  9 f5 5 10 s> str(a)'data.frame':	5 obs. of  3 variables: $ x: num  1 2 3 4 5 $ y: num  6 7 8 9 10 $ z: chr  "s" "f" "s" "f" ...> a$x[1] 1 2 3 4 5> a$x <- 11:15> a   x  y z1 11  6 s2 12  7 f3 13  8 s4 14  9 f5 15 10 s> a$w <- c(1:5)> a   x  y z w1 11  6 s 12 12  7 f 23 13  8 s 34 14  9 f 45 15 10 s 5> colnames(a) <- c('num1', 'num2', 'num3', 'num4')> a  num1 num2 num3 num41   11    6    s    12   12    7    f    23   13    8    s    34   14    9    f    45   15   10    s    5> rownames(a) <- c(6:10)> a   num1 num2 num3 num46    11    6    s    17    12    7    f    28    13    8    s    39    14    9    f    410   15   10    s    5> a$x <- c(1:5)> a   num1 num2 num3 num4 x6    11    6    s    1 17    12    7    f    2 28    13    8    s    3 39    14    9    f    4 410   15   10    s    5 5> a <- a[,-5]> a   num1 num2 num3 num46    11    6    s    17    12    7    f    28    13    8    s    39    14    9    f    410   15   10    s    5> a[2,]  num1 num2 num3 num47   12    7    f    2> a[2,1][1] 12> a[c(1,3), 2][1] 6 8> a[-2,-2]   num1 num3 num46    11    s    18    13    s    39    14    f    410   15    s    5> a[,c('x', 'y', 'w', 'z')]Error in `[.data.frame`(a, , c("x", "y", "w", "z")) :   undefined columns selected> a[,c('num1')][1] 11 12 13 14 15> a[,c('num4'), drop=FALSE]   num46     17     28     39     410    5> (a <- data.frame(num1=1:3, num2=4, num3=7:9))  num1 num2 num31    1    4    72    2    4    83    3    4    9> a[,names(a) %int% c('num2', 'num3')]Error in names(a) %int% c("num2", "num3") :   could not find function "%int%"> a[,names(a) %in% c('num2', 'num3')]  num2 num31    4    72    4    83    4    9> a[, !names(a), %in% c('num1')]Error: unexpected SPECIAL in "a[, !names(a), %in%"> a[, !names(a) %in% c('num1')]  num2 num31    4    72    4    83    4    9> # head(), tail()> a  num1 num2 num31    1    4    72    2    4    83    3    4    9> a <- data.frame(x=1:100)> head(a)  x1 12 23 34 45 56 6> tail(a)      x95   9596   9697   9798   9899   99100 100> head(a,20L)    x1   12   23   34   45   56   67   78   89   910 1011 1112 1213 1314 1415 1516 1617 1718 1819 1920 20> View(a)> # 타입 판별 함수> class(c(10,20))  [1] "numeric"> class(matrix(c(10,20)))[1] "matrix" "array" > class(data.frame(a=c(10,20), b=c(30,40)))[1] "data.frame"> is.factor(factor(c('a', 'b')))[1] TRUE> is.numeric(1)[1] TRUE> is.character(c('a', 'b'))[1] TRUE> is.data.frame(data.frame(a=1:5))[1] TRUE> # 타입 변환 함수> a <- c('x', 'y', 'z')> as.factor(a)[1] x y zLevels: x y z> as.character(as.factor(a))[1] "x" "y" "z"> a <- matrix(1:4, ncol=2)> as.data.frame(a)  V1 V21  1  32  2  4> data.frame(list(x=c(1:3), y=c(4:6)))  x y1 1 42 2 53 3 6>   print('World')[1] "World"> if(TRUE){+   print('참')+   print('Hello')+ } else {+   print('거짓')+   print('World')+ }[1] "참"[1] "Hello"> x <- c(6,7,8,9,10)> ifelse(x %% 2 ==1, '홀수', '짝수')[1] "짝수" "홀수" "짝수" "홀수" "짝수"> for (a in 1:9) {+   result = 3 * a+   print(result)+ }[1] 3[1] 6[1] 9[1] 12[1] 15[1] 18[1] 21[1] 24[1] 27> a <- 1> while(a<10) {+   result = 3 * a+   print(result)+   a <- a+1+ }[1] 3[1] 6[1] 9[1] 12[1] 15[1] 18[1] 21[1] 24[1] 27> i <- 0> while (i <= 15) {+   i <- i+1+   if (i %% 3 != 0) {+     next  # print() 실행하지 않고 while문 처음으로 +   }+   print(i)+ }[1] 3[1] 6[1] 9[1] 12[1] 15> a <- 11> repeat {+   print(a)+   if (a >= 20) {+     break+   }+   a <- a+1+ }[1] 11[1] 12[1] 13[1] 14[1] 15[1] 16[1] 17[1] 18[1] 19[1] 20> a + a[1] 40> # 벡터 연산> a <- c(1,3,5,7,9)> a + a[1]  2  6 10 14 18> a == c(1,3,5,7,7)[1]  TRUE  TRUE  TRUE  TRUE FALSE> x <- c(1,3,5)> y <- c(2,2,2,2,2)> x + y[1] 3 5 7 3 5Warning message:In x + y : longer object length is not a multiple of shorter object length> # NA> sum(c(1,2,3,NA))[1] NA> sum(c(1,2,3,NA), na.rm=T)[1] 6> a <- data.frame(x=c(1,3,5), y=('x', NA, 'z'), z=c('x', 'y', NA))Error: unexpected ',' in "a <- data.frame(x=c(1,3,5), y=('x',"> a <- data.frame(x=c(1,3,5), y=c('x', NA, 'z'), z=c('x', 'y', NA))> a  x    y    z1 1    x    x2 3 <NA>    y3 5    z <NA>> na.omit(a)  x y z1 1 x x> na.pass(a)  x    y    z1 1    x    x2 3 <NA>    y3 5    z <NA>> na.fail(a)Error in na.fail.default(a) : missing values in object> (a <- matrix(c(1,3,5,7,9,11), ncol=3))     [,1] [,2] [,3][1,]    1    5    9[2,]    3    7   11> (b <- matrix(c(2,2,2,2,NA,NA), ncol=3))     [,1] [,2] [,3][1,]    2    2   NA[2,]    2    2   NA> a     [,1] [,2] [,3][1,]    1    5    9[2,]    3    7   11> b     [,1] [,2] [,3][1,]    2    2   NA[2,]    2    2   NA> a+b     [,1] [,2] [,3][1,]    3    7   NA[2,]    5    9   NA> a*b     [,1] [,2] [,3][1,]    2   10   NA[2,]    6   14   NA> fibo <- function(x) {+   if (x==3 || x==4) {+     return(1)+   }+   return(fibo(x-3) + fibo(x-4))+ }> fibo(3)[1] 1> fibo(7)[1] 2> f <- function(a,b) {+   print(a)+   print(b)+ }> f(3,4)[1] 3[1] 4> f(b=3, a=4)[1] 4[1] 3> a <- function(b, ...) {+   print(b)+   f(...)+ }> a(2,3,4)[1] 2[1] 3[1] 4> f <- function(a,b) {+   print(a)+   y <- function(b) {+     print(b)+   }+   y(b)+ }> f(2,3)[1] 2[1] 3> y <- 1> f <- function() {+   x <- 3+   a <- function() {+     x <<- 3 # <<- : 전역변수에 할당+     y <<- 3+     print(x)+     print(y)+   }+   a()+   print(x)+   print(y)+ }> f()[1] 3[1] 3[1] 3[1] 3> y <- 1> f <- function() {+   x <- 2+   a <- function() {+     x <- 3 +     y <- 3+     print(x)+     print(y)+   }+   a()+   print(x)+   print(y)+ }> f()[1] 3[1] 3[1] 2[1] 1> x <- 5; y <- 9; z <- 13 # 전역변수> ft <- function(x) {+   y <- x + 15  # 지역변수+   print(x); print(y); print(z)+   #매개변수 지역변수 전역변수 + }> x[1] 5> y[1] 9> ft(x)[1] 5[1] 20[1] 13> ft(10)[1] 10[1] 25[1] 13> f <- function(af2) {+   af2$a <- c(1,3,5)+ }> af <- data.frame(x=c(5,7,9))> f(af)> af  x1 52 73 9> f <- function(af2) {+   af2$x <- c(1,3,5)+ }> af <- data.frame(x=c(4,6,8))> f(af) # af의 값을 덮어씀 > af  x1 42 63 8> f <- function(af2) {+   af$x <- c(1,3,5)+ }> af <- data.frame(x=c(4,6,8))> af <- f(af) # af의 값을 덮어씀 > af[1] 1 3 5> # 객체의 불변성!  > x <- list()> tracemem(x)[1] "<0x12f98dba8>"> x$b <- c(10,20,30)tracemem[0x12f98dba8 -> 0x12fa387b8]: > # 큐> que <- c()> que_size <- 0> enq <- function(num) {+   que <<- c(que,num)+   que_size <- que_size + 1+ }> deq <- function() {+   number <- que[1]+   que <<- que[-1]+   que_size <<- que_size - 1+   return(number)+ }> size <- function() {+   return(que_size)+ }> enqueue(1)Error in enqueue(1) : could not find function "enqueue"> enq(1)> enq(3)> enq(5)> print(size())[1] 0>   que_size <<- que_size + 1> enq(1)> enq(3)> enq(5)> print(size())[1] 1> # 큐> que <- c()> que_size <- 0> enq <- function(num) {+   que <<- c(que,num)+   que_size <<- que_size + 1+ }> deq <- function() {+   number <- que[1]+   que <<- que[-1]+   que_size <<- que_size - 1+   return(number)+ }> size <- function() {+   return(que_size)+ }> enq(1)> enq(3)> enq(5)> print(size())[1] 3> print(deq())[1] 1> print(deq())[1] 3> print(deq())[1] 5> enq(1)> que <- c(que, 7) # 전역변수 que를 조작 > print(size())[1] 1> deq()[1] 1> deq()[1] 7> size()[1] -1> q <- function() {+   que <- c()+   que_size <- 0 # que와 que_size가 함수 안에 있는 지역변수. 외부에서 접근불가+   +   enq <- function(num) {+     que <<- c(que,num)+     que_size <<- que_size + 1+   }+   deq <- function() {+     number <- que[1]+     que <<- que[-1]+     que_size <<- que_size - 1+     return(number)+   }+   size <- function() {+     return(que_size)+   }+   +   return(list(enq = enq, deq = deq, size = size))+ }> que <- q()> a <- q()> que$enq(3)> a$size()[1] 0> a$enq(5)> que$deq()[1] 3> a$deq()[1] 5> que$size()[1] 0> a$size()[1] 0